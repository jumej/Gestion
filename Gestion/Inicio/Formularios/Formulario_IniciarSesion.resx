<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        H8p3Omu6kuQIAAAAAElFTkSuQmCC
</value>
  </data>
</root>